{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","nums","signs","last","flag","show","this","i","j","length","res","splice","char","setState","push","cal","String","newNums","newSigns","className","onClick","e","handleButton","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.376b2e0a.chunk.js","sourcesContent":["import React from 'react';\nimport './app.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nums: [], //different numbers as element of the array\n      signs: [], //different symbols as element of the array\n      last: 0, //the last number which is still unknown of its length\n      flag: 0, //flag to avoid multiple clicks of number or signs\n      show: '0', //the overall string which is viewed to the user\n    };\n  }\n\n  cal() {\n    let signs = this.state.signs;\n    let nums = this.state.nums;\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < signs.length; j++) {\n        if (signs[j] === '/' && i === 0) {\n          let res = nums[j] / nums[j + 1] || 0;\n          nums.splice(j, 2, res);\n          signs.splice(j, 1);\n        }\n        if (signs[j] === '*' && i === 1) {\n          let res = nums[j] * nums[j + 1] || 0;\n          nums.splice(j, 2, res);\n          signs.splice(j, 1);\n        }\n        if (signs[j] === '+' && i === 2) {\n          let res = nums[j] + nums[j + 1] || 0;\n          nums.splice(j, 2, res);\n          signs.splice(j, 1);\n        }\n        if (signs[j] === '-' && i === 3) {\n          let res = nums[j] - nums[j + 1] || 0;\n          nums.splice(j, 2, res);\n          signs.splice(j, 1);\n        }\n      }\n    }\n    return nums[0];\n  }\n\n  handleButton(char) {\n    if (char === 'C') {\n      this.setState({ last: 0, nums: [], signs: [], flag: 0, show: '0' });\n    } else if (char === '=') {\n      if (this.state.flag === 1) {\n        let nums = this.state.nums;\n        if (this.state.last !== 0) {\n          nums.push(this.state.last);\n        }\n        let res = 0;\n        res = this.cal();\n        this.setState({ nums: [], signs: [], show: res, last: res, flag: 1 });\n      }\n    } else if (\n      char === 1 ||\n      char === 2 ||\n      char === 3 ||\n      char === 4 ||\n      char === 5 ||\n      char === 6 ||\n      char === 7 ||\n      char === 8 ||\n      char === 9 ||\n      char === 0\n    ) {\n      let last = this.state.last * 10 + char;\n      let show = this.state.show;\n      if (this.state.show === '0') {\n        show = new String(char);\n      } else {\n        show += new String(char);\n      }\n      this.setState({ last: last, show: show, flag: 1 });\n    } else {\n      if (this.state.flag === 1) {\n        let newNums = this.state.nums;\n        newNums.push(this.state.last);\n        let newSigns = this.state.signs;\n        newSigns.push(char);\n        let show = this.state.show;\n        show = show + char;\n        this.setState({\n          nums: newNums,\n          signs: newSigns,\n          last: 0,\n          show: show,\n          flag: 0,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className='app'>\n          <h1 className='result'>{this.state.show}</h1>\n          <div className='numbers'>\n            <div className='row'>\n              <button onClick={(e) => this.handleButton(7, e)} className='num'>\n                7\n              </button>\n              <button onClick={(e) => this.handleButton(8, e)} className='num'>\n                8\n              </button>\n              <button onClick={(e) => this.handleButton(9, e)} className='num'>\n                9\n              </button>\n              <button\n                onClick={(e) => this.handleButton('C', e)}\n                className='num'>\n                C\n              </button>\n            </div>\n            <div className='row'>\n              <button onClick={(e) => this.handleButton(4, e)} className='num'>\n                4\n              </button>\n              <button onClick={(e) => this.handleButton(5, e)} className='num'>\n                5\n              </button>\n              <button onClick={(e) => this.handleButton(6, e)} className='num'>\n                6\n              </button>\n              <button\n                onClick={(e) => this.handleButton('/', e)}\n                className='num'>\n                /\n              </button>\n            </div>\n            <div className='row'>\n              <button onClick={(e) => this.handleButton(1, e)} className='num'>\n                1\n              </button>\n              <button onClick={(e) => this.handleButton(2, e)} className='num'>\n                2\n              </button>\n              <button onClick={(e) => this.handleButton(3, e)} className='num'>\n                3\n              </button>\n              <button\n                onClick={(e) => this.handleButton('*', e)}\n                className='num'>\n                *\n              </button>\n            </div>\n            <div className='row'>\n              <button onClick={(e) => this.handleButton(0, e)} className='num'>\n                0\n              </button>\n              <button\n                onClick={(e) => this.handleButton('=', e)}\n                className='num'>\n                =\n              </button>\n              <button\n                onClick={(e) => this.handleButton('+', e)}\n                className='num'>\n                +\n              </button>\n              <button\n                onClick={(e) => this.handleButton('-', e)}\n                className='num'>\n                -\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}